# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  batch: true

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python36:
      python.version: '3.6'
    Python37:
      python.version: '3.7'

variables:
  PIP_CACHE_DIR: $(Pipeline.Workspace)/.pip

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- task: Cache@2
  displayName: Use cached pip environment
  inputs:
    key: 'python | "$(Agent.OS)" | requirements.txt | Markus'
    path: $(PIP_CACHE_DIR)
    cacheHitVar: PIP_CACHE_RESTORED

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: Install pip dependencies (if not restored from cache)
  condition: eq(variables.PIP_CACHE_RESTORED, 'false')

- script: |
    flake8 src/
  displayName: 'flake8'

- script: |
    pytest --cov=src
  displayName: 'pytest'
